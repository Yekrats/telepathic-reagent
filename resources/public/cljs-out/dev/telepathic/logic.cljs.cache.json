["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$telepathic.logic","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$any-rc-match?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","~:line",51,"~:column",7,"~:end-line",51,"~:end-column",20,"~:arglists",["~#list",["~$quote",["^E",[["~$s"]]]]],"~:doc","Do any row or column have a matching set [s] of 3?"],"^5","~$telepathic.logic/any-rc-match?","^?","src/telepathic/logic.cljs","^C",20,"~:method-params",["^E",[["~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^E",[null,null]],"^A",1,"~:variadic?",false,"^@",51,"~:ret-tag","~$any","^B",51,"~:max-fixed-arity",1,"~:fn-var",true,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","Do any row or column have a matching set [s] of 3?"],"~$any-col-match?",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",46,"^A",7,"^B",46,"^C",21,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","The same as any-row-match? function, but performing a 90째 rotation first,\n  to capture columns."],"^5","~$telepathic.logic/any-col-match?","^?","src/telepathic/logic.cljs","^C",21,"^I",["^E",[["~$s"]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",46,"^M",["^4",["^N","~$clj-nil"]],"^B",46,"^O",1,"^P",true,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","The same as any-row-match? function, but performing a 90째 rotation first,\n  to capture columns."],"~$shapes",["^ ","^5","~$telepathic.logic/shapes","^?","src/telepathic/logic.cljs","^@",7,"^A",1,"^B",7,"^C",12,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",7,"^A",6,"^B",7,"^C",12],"~:tag","~$cljs.core/IVector"],"~$condition-cards",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",15,"^A",7,"^B",15,"^C",22,"^D",["^E",["^F",["^E",[["~$cards"]]]]]],"^5","~$telepathic.logic/condition-cards","^?","src/telepathic/logic.cljs","^C",22,"^I",["^E",[["^Y"]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",15,"^M","~$clj","^B",15,"^O",1,"^P",true,"^D",["^E",["^F",["^E",[["^Y"]]]]]],"~$sls",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",55,"^A",7,"^B",55,"^C",10,"^D",["^E",["^F",["^E",[[]]]]]],"^5","~$telepathic.logic/sls","^?","src/telepathic/logic.cljs","^C",10,"^I",["^E",[[]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",55,"^M",["^4",["^N","~$number"]],"^B",55,"^O",0,"^P",true,"^D",["^E",["^F",["^E",[[]]]]]],"~$initiate-actions",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",63,"^A",7,"^B",63,"^C",23,"^D",["^E",["^F",["^E",[[]]]]]],"^5","~$telepathic.logic/initiate-actions","^?","src/telepathic/logic.cljs","^C",23,"^I",["^E",[[]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",63,"^M","~$cljs.core/IMap","^B",63,"^O",0,"^P",true,"^D",["^E",["^F",["^E",[[]]]]]],"~$any-row-match?",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",39,"^A",7,"^B",39,"^C",21,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","Performs check4 function, taking the first row '(take 4 s)', then calling\n  itself recursively until all are taken."],"^5","~$telepathic.logic/any-row-match?","^?","src/telepathic/logic.cljs","^C",21,"^I",["^E",[["~$s"]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",39,"^M",["^4",["^N","^S"]],"^B",39,"^O",1,"^P",true,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","Performs check4 function, taking the first row '(take 4 s)', then calling\n  itself recursively until all are taken."],"~$colors",["^ ","^5","~$telepathic.logic/colors","^?","src/telepathic/logic.cljs","^@",5,"^A",1,"^B",5,"^C",12,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",5,"^A",6,"^B",5,"^C",12],"^V","^W"],"~$check4",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",23,"^A",7,"^B",23,"^C",13,"^D",["^E",["^F",["^E",[["~$set"]]]]],"^G","Take in a set of 4 paired items.\n  Check to see if any 3 contiguous items have a matching pattern in any color or shape.\n  Returns nil if nothing found, or returns the matching color or shape."],"^5","~$telepathic.logic/check4","^?","src/telepathic/logic.cljs","^C",13,"^I",["^E",[["^1;"]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",23,"^M",["^4",["^N","^S"]],"^B",23,"^O",1,"^P",true,"^D",["^E",["^F",["^E",[["^1;"]]]]],"^G","Take in a set of 4 paired items.\n  Check to see if any 3 contiguous items have a matching pattern in any color or shape.\n  Returns nil if nothing found, or returns the matching color or shape."],"~$actions",["^ ","^5","~$telepathic.logic/actions","^?","src/telepathic/logic.cljs","^@",9,"^A",1,"^B",9,"^C",13,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",9,"^A",6,"^B",9,"^C",13],"^V","^W"],"~$rot-90",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",34,"^A",7,"^B",34,"^C",13,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","Takes a sequence of 16 color/shape pairs and rotates it 90째."],"^5","~$telepathic.logic/rot-90","^?","src/telepathic/logic.cljs","^C",13,"^I",["^E",[["~$s"]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",34,"^M",["^4",["^[","^W","^N","~$cljs.core/MetaFn","^S"]],"^B",34,"^O",1,"^P",true,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","Takes a sequence of 16 color/shape pairs and rotates it 90째."],"~$all-match?",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",17,"^A",7,"^B",17,"^C",17,"^D",["^E",["^F",["^E",[["^1;"]]]]],"^G","Checks all the members of a set. If all match, return that value. Otherwise return nil."],"^5","~$telepathic.logic/all-match?","^?","src/telepathic/logic.cljs","^C",17,"^I",["^E",[["^1;"]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",17,"^M",["^4",["^N","^S"]],"^B",17,"^O",1,"^P",true,"^D",["^E",["^F",["^E",[["^1;"]]]]],"^G","Checks all the members of a set. If all match, return that value. Otherwise return nil."],"~$players",["^ ","^5","~$telepathic.logic/players","^?","src/telepathic/logic.cljs","^@",3,"^A",1,"^B",3,"^C",13,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",3,"^A",6,"^B",3,"^C",13],"^V","^W"],"~$tiles",["^ ","^5","~$telepathic.logic/tiles","^?","src/telepathic/logic.cljs","^@",13,"^A",1,"^B",13,"^C",11,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",13,"^A",6,"^B",13,"^C",11],"^V",["^4",["^[","^W","^N","^1A","^S"]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:corner-counterclockwise","~:orange","~:shape-player","~:deck","~:green","~:ew-reverse","~:bacon","~:circle","~:col-south","~:lose","~:col-north","~:ew-do-si-do","~:star","~:row-east","~:ns-do-si-do","~:color-player","~:blue","~:ns-reverse","~:plus","~:discard","~:available","~:purple","~:row-west","~:win","~:corner-clockwise"]],"~:order",["^1[","^1N","^25","^20","^1P","^1M","^22","^1S","^1X","^1R","^1Y","^26","^1V","^1T","^1W","^1Z","^1Q","^21","^28","^1L","^27","^1U","^24","^1O","^23"]],"^G",null]
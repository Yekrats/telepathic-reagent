["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$telepathic.logic","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$any-rc-match?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","~:line",64,"~:column",7,"~:end-line",64,"~:end-column",20,"~:arglists",["~#list",["~$quote",["^E",[["~$s"]]]]],"~:doc","Do any row or column have a matching set [s] of 3?"],"^5","~$telepathic.logic/any-rc-match?","^?","src/telepathic/logic.cljs","^C",20,"~:method-params",["^E",[["~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^E",[null,null]],"^A",1,"~:variadic?",false,"^@",64,"~:ret-tag","~$any","^B",64,"~:max-fixed-arity",1,"~:fn-var",true,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","Do any row or column have a matching set [s] of 3?"],"~$any-col-match?",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",59,"^A",7,"^B",59,"^C",21,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","The same as any-row-match? function, but performing a 90째 rotation first,\n  to capture columns."],"^5","~$telepathic.logic/any-col-match?","^?","src/telepathic/logic.cljs","^C",21,"^I",["^E",[["~$s"]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",59,"^M",["^4",["^N","~$clj-nil"]],"^B",59,"^O",1,"^P",true,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","The same as any-row-match? function, but performing a 90째 rotation first,\n  to capture columns."],"~$shapes",["^ ","^5","~$telepathic.logic/shapes","^?","src/telepathic/logic.cljs","^@",19,"^A",1,"^B",19,"^C",12,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",19,"^A",6,"^B",19,"^C",12],"~:tag","~$cljs.core/IVector"],"~$condition-cards",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",27,"^A",7,"^B",27,"^C",22,"^D",["^E",["^F",["^E",[["~$cards"]]]]]],"^5","~$telepathic.logic/condition-cards","^?","src/telepathic/logic.cljs","^C",22,"^I",["^E",[["^Y"]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",27,"^M","~$clj","^B",27,"^O",1,"^P",true,"^D",["^E",["^F",["^E",[["^Y"]]]]]],"~$sls",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",68,"^A",7,"^B",68,"^C",10,"^D",["^E",["^F",["^E",[[]]]]],"^G","A shuffled-legal-start of the tiles."],"^5","~$telepathic.logic/sls","^?","src/telepathic/logic.cljs","^C",10,"^I",["^E",[[]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",68,"^M",["^4",["^N","~$number"]],"^B",68,"^O",0,"^P",true,"^D",["^E",["^F",["^E",[[]]]]],"^G","A shuffled-legal-start of the tiles."],"~$initiate-actions",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",76,"^A",7,"^B",76,"^C",23,"^D",["^E",["^F",["^E",[[]]]]]],"^5","~$telepathic.logic/initiate-actions","^?","src/telepathic/logic.cljs","^C",23,"^I",["^E",[[]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",76,"^M","~$cljs.core/IMap","^B",76,"^O",0,"^P",true,"^D",["^E",["^F",["^E",[[]]]]]],"~$any-row-match?",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",52,"^A",7,"^B",52,"^C",21,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","Performs check4 function, taking the first row '(take 4 s)', then calling\n  itself recursively until all are taken."],"^5","~$telepathic.logic/any-row-match?","^?","src/telepathic/logic.cljs","^C",21,"^I",["^E",[["~$s"]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",52,"^M",["^4",["^N","^S"]],"^B",52,"^O",1,"^P",true,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","Performs check4 function, taking the first row '(take 4 s)', then calling\n  itself recursively until all are taken."],"~$colors",["^ ","^5","~$telepathic.logic/colors","^?","src/telepathic/logic.cljs","^@",17,"^A",1,"^B",17,"^C",12,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",17,"^A",6,"^B",17,"^C",12],"^V","^W"],"~$check4",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",36,"^A",7,"^B",36,"^C",13,"^D",["^E",["^F",["^E",[["~$set"]]]]],"^G","Take in a set of 4 paired items.\n  Check to see if any 3 contiguous items have a matching pattern in any color or shape.\n  Returns nil if nothing found, or returns the matching color or shape."],"^5","~$telepathic.logic/check4","^?","src/telepathic/logic.cljs","^C",13,"^I",["^E",[["^1;"]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",36,"^M",["^4",["^N","^S"]],"^B",36,"^O",1,"^P",true,"^D",["^E",["^F",["^E",[["^1;"]]]]],"^G","Take in a set of 4 paired items.\n  Check to see if any 3 contiguous items have a matching pattern in any color or shape.\n  Returns nil if nothing found, or returns the matching color or shape."],"~$actions",["^ ","^5","~$telepathic.logic/actions","^?","src/telepathic/logic.cljs","^@",21,"^A",1,"^B",21,"^C",13,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",21,"^A",6,"^B",21,"^C",13],"^V","^W"],"~$rot-90",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",47,"^A",7,"^B",47,"^C",13,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","Takes a sequence of 16 color/shape pairs and rotates it 90째."],"^5","~$telepathic.logic/rot-90","^?","src/telepathic/logic.cljs","^C",13,"^I",["^E",[["~$s"]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",47,"^M",["^4",["^[","^W","^N","~$cljs.core/MetaFn","^S"]],"^B",47,"^O",1,"^P",true,"^D",["^E",["^F",["^E",[["~$s"]]]]],"^G","Takes a sequence of 16 color/shape pairs and rotates it 90째."],"~$all-match?",["^ ","^=",null,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",30,"^A",7,"^B",30,"^C",17,"^D",["^E",["^F",["^E",[["^1;"]]]]],"^G","Checks all the members of a set. If all match, return that value. Otherwise return nil."],"^5","~$telepathic.logic/all-match?","^?","src/telepathic/logic.cljs","^C",17,"^I",["^E",[["^1;"]]],"^J",null,"^K",["^E",[null,null]],"^A",1,"^L",false,"^@",30,"^M",["^4",["^N","^S"]],"^B",30,"^O",1,"^P",true,"^D",["^E",["^F",["^E",[["^1;"]]]]],"^G","Checks all the members of a set. If all match, return that value. Otherwise return nil."],"~$testdata",["^ ","^5","~$telepathic.logic/testdata","^?","src/telepathic/logic.cljs","^@",3,"^A",1,"^B",3,"^C",14,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",3,"^A",6,"^B",3,"^C",14],"^V","^15"],"~$players",["^ ","^5","~$telepathic.logic/players","^?","src/telepathic/logic.cljs","^@",15,"^A",1,"^B",15,"^C",13,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",15,"^A",6,"^B",15,"^C",13],"^V","^W"],"~$tiles",["^ ","^5","~$telepathic.logic/tiles","^?","src/telepathic/logic.cljs","^@",25,"^A",1,"^B",25,"^C",11,"^>",["^ ","^?","/Users/scotto/code/personal/clojure-lunch-bytes/telepathic/src/telepathic/logic.cljs","^@",25,"^A",6,"^B",25,"^C",11],"^V",["^4",["^[","^W","^N","^1A","^S"]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:corner-counterclockwise","~:orange","~:shape-player","~:deck","~:green","~:ew-reverse","~:bacon","~:circle","~:col-south","~:lose","~:col-north","~:ew-do-si-do","~:star","~:row-east","~:actions","~:ns-do-si-do","~:color-player","~:blue","~:ns-reverse","~:plus","~:discard","~:available","~:purple","~:row-west","~:board","~:win","~:corner-clockwise"]],"~:order",["^22","^1P","^2:","^20","^2;","^1W","^28","^1R","^1T","^1Z","^23","^1U","^25","^1O","^27","^1Q","^26","^1X","^1S","^1N","^1[","^29","^1V","^21","^24","^1Y","^2<"]],"^G",null]